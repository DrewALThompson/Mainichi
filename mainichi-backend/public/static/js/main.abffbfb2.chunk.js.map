{"version":3,"sources":["actions/setIndex.js","components/routerButton.js","components/cardButtons.js","components/cardFace.js","components/counter.js","containers/wordCard.js","components/wordRoutes.js","containers/wordsContainer.js","actions/fetchWords.js","containers/routeContainer.js","components/cardFaceUserword.js","components/newWordForm.js","actions/addWord.js","containers/userwordsContainer.js","components/loginForm.js","actions/fetchUser.js","components/signupForm.js","actions/fetchNewUser.js","containers/loggerContainer.js","containers/userContainer.js","components/navBar.js","components/notFound.js","App.js","index.js","reducers/wordsReducer.js"],"names":["setIndex","i","type","payload","Button","styled","Link","connect","dispatch","props","to","route","onClick","console","log","children","CardButtons","ButtonContainer","div","TitleContainer","h1","SentContainer","h3","CardFace","title","sentence","last","flip","next","CounterDiv","Counter","wordIndex","wordsLength","CardStock","WordCard","flipCard","e","preventDefault","setState","flipped","state","nextCard","index","loadedWords","length","lastCard","word","this","jpname","jpsentence","definition","engsentence","match","params","wordId","words","filter","category","Component","Container","Header","p","HeaderEn","HeaderJp","WordRoutes","useRouteMatch","path","url","exact","render","WordsContainer","fetchWords","fetch","then","res","json","Border","BorderA","BorderB","RouteContainer","remove","FormBox","NewWordForm","handleSubmit","addWord","handleOnChange","target","name","value","user","id","onSubmit","onChange","headers","method","body","JSON","stringify","UserwordsContainer","userwords","removeCard","Math","min","message","LoginForm","fetchUser","password","className","label","SignupForm","fetchNewUser","password_confirmation","LoginDiv","LoggerContainer","UserContainer","Bubble","NavLink","NavBar","NotFound","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","userIndex","action","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.abffbfb2.chunk.js","sourcesContent":["export function setIndex(i = 0){\r\n    return {\r\n        type: 'SET_INDEX', payload: i\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { setIndex } from '../actions/setIndex';\r\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst Button = styled(Link)`\r\n    border: #8E8A83 1px solid;\r\n    background-color: #2869A5;\r\n    color: #FAF8F7;\r\n    padding: 30px;\r\n    position: relative;\r\n    height: 125px;\r\n    width: 120px;\r\n    font-size: 18px;\r\n    border-radius: 10px;\r\n    &:hover {background-color: #85606A};\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`\r\n\r\nconst RouterButton = (props) => {\r\n\r\n    const onClick = () => {\r\n        props.setIndex(0)\r\n        console.log('is clicked')\r\n    }\r\n\r\n    return (\r\n        <Button to={props.route} type='button' onClick={onClick}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setIndex: (i) => dispatch(setIndex(i))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RouterButton)\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function CardButtons(props) {\r\n\r\n    return(\r\n        <>\r\n            <button type='button' onClick={props.onClick}>{props.children}</button>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport CardButtons from './cardButtons'\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonContainer = styled.div`\r\n    position: absolute;\r\n    top: 185px;\r\n    left: 135px;\r\n`\r\n\r\nconst TitleContainer = styled.h1`\r\n    text-align: center;\r\n`\r\n\r\nconst SentContainer = styled.h3`\r\n    text-align: center;\r\n`\r\n\r\nexport default function CardFace(props) {\r\n\r\n    return(\r\n        <div>\r\n            <TitleContainer>{props.title}</TitleContainer>\r\n            <SentContainer>{props.sentence}</SentContainer>\r\n            <ButtonContainer>\r\n                <CardButtons onClick={props.last}>Last</CardButtons>\r\n                <CardButtons onClick={props.flip}>Flip</CardButtons>\r\n                <CardButtons onClick={props.next}>Next</CardButtons>\r\n            </ButtonContainer>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CounterDiv = styled.div`\r\n    position: absolute;\r\n    right: 170px;\r\n    top: 300px;\r\n    font-size: 50px;\r\n`\r\n\r\nexport default function Counter(props) {\r\n\r\n    return(\r\n        <CounterDiv>\r\n            {props.wordIndex + 1} / {props.wordsLength}\r\n        </CounterDiv>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport CardFace from '../components/cardFace';\r\nimport { connect } from 'react-redux';\r\nimport { setIndex } from '../actions/setIndex';\r\nimport Counter from '../components/counter'\r\n\r\nconst CardStock = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 400px;\r\n    border: white solid 2px;\r\n    width: 400px;\r\n    height 224px;\r\n\r\n`\r\n\r\nclass WordCard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            flipped: false,\r\n            loadedWords: []\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        if (props.match.params.wordId !== 'all'){\r\n            return {...state, loadedWords: props.words.filter((word) => word.category === props.match.params.wordId)}\r\n        } else {\r\n            return {...state, loadedWords: props.words}\r\n        } \r\n    }\r\n    \r\n    \r\n\r\n    flipCard = (e) => {\r\n        e.preventDefault();\r\n        this.setState({flipped: !this.state.flipped})\r\n    }\r\n\r\n    nextCard = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.index >= this.state.loadedWords.length - 1){\r\n            this.props.setIndex(0);\r\n            this.setState({flipped: false})\r\n        } else {\r\n            this.props.setIndex(this.props.index + 1);\r\n            this.setState({flipped: false})\r\n        }\r\n    }\r\n\r\n    lastCard = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.index === 0){\r\n            this.props.setIndex(this.state.loadedWords.length - 1)\r\n            this.setState({flipped: false})\r\n        } else {\r\n            this.props.setIndex(this.props.index - 1)\r\n            this.setState({flipped: false})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let word = this.state.loadedWords[this.props.index];\r\n        \r\n        return(\r\n            <CardStock>\r\n                {this.state.flipped === false ?\r\n                 <CardFace flip={this.flipCard} next={this.nextCard} last={this.lastCard} title={word.jpname} sentence={word.jpsentence} /> : \r\n                 <CardFace flip={this.flipCard} next={this.nextCard} last={this.lastCard} title={word.definition} sentence={word.engsentence} />}\r\n                 <Counter wordIndex={this.props.index} wordsLength={this.state.loadedWords.length} />\r\n            </CardStock>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        words: state.words,\r\n        index: state.index\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setIndex: (i) => dispatch(setIndex(i))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordCard)","import React from 'react';\r\nimport RouterButton from './routerButton';\r\nimport styled from 'styled-components';\r\nimport WordCard from '../containers/wordCard'\r\nimport {\r\n    Route,\r\n    Switch,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    left: 380px;\r\n    top: 20px;\r\n`\r\n\r\nconst Header = styled.p`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    color: #FAF8F7;\r\n`\r\n\r\n\r\nconst HeaderEn = styled(Header)`\r\n    top: 130px;\r\n    right: 500px;\r\n`\r\n\r\nconst HeaderJp = styled(Header)`\r\n    top: 180px;\r\n    right: 440px;\r\n`\r\n\r\n\r\n\r\nconst WordRoutes = () => {\r\n\r\n    let { path, url} = useRouteMatch();\r\n    \r\n    return(\r\n        <>\r\n            <Container>\r\n                <RouterButton route={`${url}/n1`}>N1</RouterButton>\r\n                <RouterButton route={`${url}/n2`}>N2</RouterButton>\r\n                <RouterButton route={`${url}/n3`}>N3</RouterButton>\r\n                <RouterButton route={`${url}/all`}>All</RouterButton>\r\n                <RouterButton route={`/user`}>My Words</RouterButton>\r\n            </Container>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <HeaderEn>Please Choose A category</HeaderEn>\r\n                    <HeaderJp>カテゴリーを選んでください！</HeaderJp>\r\n                </Route>\r\n                <Route path={`${path}/:wordId`} render={(props) => <WordCard {...props}/>} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WordRoutes","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport WordRoutes from '../components/wordRoutes';\r\nimport {fetchWords}  from '../actions/fetchWords';\r\nimport { setIndex } from '../actions/setIndex';\r\n\r\nclass WordsContainer extends Component {\r\n\r\n    \r\n    componentWillMount(){\r\n        this.props.fetchWords()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <WordRoutes />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        words: state.words\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchWords: () => dispatch(fetchWords())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordsContainer)\r\n","export function fetchWords(json){\r\n    return (dispatch) => {\r\n        fetch('http://localhost:3000/words')\r\n        .then(res => res.json())\r\n        .then(json => dispatch({\r\n            type: 'SET_WORDS',\r\n            payload: json\r\n        }))\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport RouterButton from '../components/routerButton';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Border = styled.div`\r\n    position: absolute;\r\n`\r\n\r\nconst BorderA = styled(Border)`\r\n    top: 40%;\r\n    left: 35%;\r\n`\r\n\r\nconst BorderB = styled(Border)`\r\n    top: 40%;\r\n    left: 55%;\r\n`\r\n\r\n\r\nconst Header = styled.p`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    color: #FAF8F7;\r\n`\r\nconst HeaderEn = styled(Header)``\r\n\r\nconst HeaderJp = styled(Header)``\r\n\r\nexport default class RouteContainer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <HeaderEn>Please Choose an option!</HeaderEn>\r\n                <HeaderJp>選択してください！</HeaderJp>\r\n                <BorderA>< RouterButton route={'/study'}>Let's Study</RouterButton></BorderA>\r\n                <BorderB>< RouterButton route={'/user'}>Take me to my page!</RouterButton></BorderB>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CardButtons from './cardButtons'\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonContainer = styled.div`\r\n    position: absolute;\r\n    top: 185px;\r\n    left: 135px;\r\n`\r\n\r\nconst TitleContainer = styled.h1`\r\n    text-align: center;\r\n`\r\n\r\nconst SentContainer = styled.h3`\r\n    text-align: center;\r\n`\r\n\r\nexport default function CardFace(props) {\r\n\r\n    return(\r\n        <div>\r\n            <TitleContainer>{props.title}</TitleContainer>\r\n            <SentContainer>{props.sentence}</SentContainer>\r\n            <ButtonContainer>\r\n                <CardButtons onClick={props.remove}>Remove</CardButtons>\r\n                <CardButtons onClick={props.last}>Last</CardButtons>\r\n                <CardButtons onClick={props.flip}>Flip</CardButtons>\r\n                <CardButtons onClick={props.next}>Next</CardButtons>\r\n            </ButtonContainer>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport {addWord} from '../actions/addWord'\r\n\r\nconst FormBox = styled.div`\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 0px;\r\n`\r\n\r\nclass NewWordForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          jpname: '',\r\n          definition: '',\r\n          jpsentence: '',\r\n          engsentence: '',\r\n          user: this.props.user.id\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addWord(this.state)\r\n        this.setState({\r\n        jpname: '',\r\n        definition: '',\r\n        jpsentence: '',\r\n        engsentence: ''\r\n        })\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <FormBox>\r\n                <h3>Add a New Word</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>漢字<br />\r\n                        <input type='text' name='jpname' value={this.state.jpname} onChange={e => this.handleOnChange(e)} />\r\n                    </label><br />\r\n                    <label>意味<br />\r\n                        <input type='text' name='definition' value={this.state.definition} onChange={e => this.handleOnChange(e)} />\r\n                    </label><br />\r\n                    <label>文<br />\r\n                        <input type='text' name='jpsentence' value={this.state.jpsentence} onChange={e => this.handleOnChange(e)} />\r\n                    </label><br />\r\n                    <label>Translation<br />\r\n                        <input type='text' name='engsentence' value={this.state.engsentence} onChange={e => this.handleOnChange(e)} />\r\n                    </label><br />\r\n                    <input type='submit' onClick={this.props.onClick} />\r\n                </form>\r\n            </FormBox>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addWord: (i) => dispatch(addWord(i))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewWordForm)","export function addWord(json){\r\n    return (dispatch) => { \r\n        fetch('http://localhost:3000/userwords', {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(json)\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => dispatch({\r\n            type: 'ADD_WORD',\r\n            payload: json\r\n        }))\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport CardFaceUserword from '../components/cardFaceUserword';\r\nimport { connect } from 'react-redux';\r\nimport NewWordForm from '../components/newWordForm';\r\nimport Counter from '../components/counter';\r\nimport { setIndex } from '../actions/setIndex';\r\n\r\nconst CardStock = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nposition: absolute;\r\ntop: 200px;\r\nleft: 400px;\r\nborder: white solid 2px;\r\nwidth: 400px;\r\nheight 224px;\r\n`\r\n\r\nclass UserwordsContainer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            flipped: false\r\n        }\r\n    }\r\n\r\n\r\n    flipCard = (e) => {\r\n        e.preventDefault();\r\n        this.setState({flipped: !this.state.flipped})\r\n    }\r\n\r\n    nextCard = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.index >= this.props.userwords.length - 1){\r\n            this.props.setIndex(0)\r\n            this.setState({flipped: false})\r\n        } else {\r\n            this.props.setIndex(this.props.index + 1)\r\n            this.setState({flipped: false})\r\n        }\r\n    }\r\n\r\n    lastCard = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.index === 0){\r\n            this.props.setIndex(this.props.userwords.length - 1)\r\n            this.setState({flipped: false})\r\n        } else {\r\n            this.props.setIndex(this.props.index - 1)\r\n            this.setState({flipped: false})\r\n        }\r\n    }\r\n\r\n    removeCard = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let i = Math.min(this.props.userwords.length - 1, this.props.index);\r\n        let word = this.props.userwords[i];\r\n        \r\n        return(\r\n            <>\r\n                <CardStock>\r\n                    {this.state.flipped === false ?\r\n                    <CardFaceUserword flip={this.flipCard} next={this.nextCard} last={this.lastCard} remove={this.removeCard} title={word.jpname} sentence={word.jpsentence} /> : \r\n                    <CardFaceUserword flip={this.flipCard} next={this.nextCard} last={this.lastCard} remove={this.removeCard} title={word.definition} sentence={word.engsentence} />}\r\n                    <Counter wordIndex={this.props.index} wordsLength={this.props.userwords.length} />\r\n                </CardStock>\r\n                <NewWordForm/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        index: state.index,\r\n        userwords: state.user.userwords,\r\n        message: state.message\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setIndex: (i) => dispatch(setIndex(i))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserwordsContainer)","import React, { Component } from 'react';\r\nimport {fetchUser} from '../actions/fetchUser'\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          name: '',\r\n          password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.fetchUser(this.state)\r\n        this.setState({\r\n            name: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='form' id='Login'>\r\n                <h3>Login Form</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Username:</label><br /><input type='text' name='name' label='Username' value={this.state.name} onChange={e => this.handleOnChange(e)} /><br />\r\n                    <label>Password: </label><br /><input type='password' name='password' label='Password' value={this.state.password} onChange={e => this.handleOnChange(e)} /><br />\r\n                    <input type='submit' />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{fetchUser})(LoginForm)","export function fetchUser(json){\r\n    return (dispatch) => { \r\n        fetch('http://localhost:3000/sessions', {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(json)\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => dispatch({\r\n            type: 'SET_USER',\r\n            payload: user\r\n        }))\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fetchNewUser} from '../actions/fetchNewUser'\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          name: '',\r\n          password: '',\r\n          password_confirmation: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.fetchNewUser(this.state)\r\n        this.setState({\r\n            name: '',\r\n            password: '',\r\n            password_confirmation: ''\r\n        })\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='form' id='Signup'>\r\n                <h3>Signup Form</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Username:</label><br /><input type='text' name='name' label='Username' value={this.state.name} onChange={e => this.handleOnChange(e)} /><br />\r\n                    <label>Password:</label><br /><input type='password' name='password' label='Password' value={this.state.password} onChange={e => this.handleOnChange(e)} /><br />\r\n                    <label>Password Confirmation:</label><br /><input type='password' name='password_confirmation' label='Password Confirmation' value={this.state.password_confirmation} onChange={e => this.handleOnChange(e)} /><br />\r\n                    <input type='submit' />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{fetchNewUser})(SignupForm)","export function fetchNewUser(json){\r\n    return (dispatch) => { \r\n        fetch('http://localhost:3000/users', {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(json)\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => dispatch({\r\n            type: 'SET_USER',\r\n            payload: user\r\n        }))\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport LoginForm from '../components/loginForm';\r\nimport SignupForm from '../components/signupForm';\r\nimport styled from 'styled-components'\r\n\r\nconst LoginDiv = styled.div`\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 500px;\r\n`\r\n\r\nexport default class LoggerContainer extends Component {\r\n    render(){\r\n        return(\r\n            <LoginDiv>\r\n                <LoginForm />\r\n                <SignupForm />\r\n            </LoginDiv>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport UserwordsContainer from './userwordsContainer'\r\nimport LoggerContainer from './loggerContainer'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass UserContainer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n                {this.props.user !== null ?\r\n                <UserwordsContainer /> :\r\n                <LoggerContainer />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserContainer)","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Bubble = styled.div`\r\n    border: 2px solid #8B8F94;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n\r\n    return (\r\n        <Bubble>\r\n                <button>\r\n                    <NavLink to='/study'>\r\n                        Study\r\n                    </NavLink>\r\n                </button>\r\n                <button>\r\n                    <NavLink to ='/user' >\r\n                        My Page\r\n                    </NavLink>\r\n                </button>\r\n        </Bubble>\r\n    )\r\n}\r\n\r\nexport default NavBar","const NotFound = () => {\r\n    return (\r\n        <div className='page404'>\r\n            <h1>\r\n                404 This Page Not Found!\r\n            </h1>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import LoggerContainer from './containers/loggerContainer';\r\nimport WordsContainer from './containers/wordsContainer';\r\nimport RouteContainer from './containers/routeContainer';\r\nimport UserContainer from './containers/userContainer';\r\nimport NavBar from './components/navBar';\r\nimport NotFound from './components/notFound';\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      \r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <RouteContainer />\r\n        </Route>\r\n        <Route path='/user'>\r\n          <UserContainer />\r\n        </Route>\r\n        <Route path='/study'>\r\n          <WordsContainer />\r\n        </Route>\r\n        <Route path='*'>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport wordsReducer from './reducers/wordsReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(wordsReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","export default function wordsReducer (state = { user: null, words: null, message: null, index: 0, userIndex: 0}, action){\r\n    switch (action.type){\r\n        case 'SET_USERWORDS':\r\n            return {...state, userwords: action.payload}\r\n        case 'SET_WORDS':\r\n            return {...state, words: action.payload}\r\n        case 'ADD_WORD':\r\n            return {...state, message: action.payload.message, user: {...state.user, userwords: action.payload.userwords}}\r\n        case 'SET_INDEX':\r\n            return {...state, index: action.payload}\r\n        case 'SET_USER':\r\n            return {...state, user: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}"],"sourceRoot":""}